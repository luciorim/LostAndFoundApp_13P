version: '3.8'

services:
  pgdb:
    image: postgres:17
    container_name: pgdb
    env_file: .env.prod
    ports:
      - "5432:5432"
    volumes:
      - pgdbdata:/var/lib/postgresql/data
    networks:
      - app-network

  django:
    build: .
    command: >
      bash -c "python manage.py collectstatic --noinput &&
               gunicorn lost_and_found.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
    depends_on:
      - pgdb
      - minio
    env_file:
      - .env.prod
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
    depends_on:
      - django
    networks:
      - app-network

  minio:
    image: minio/minio
    env_file: .env.prod
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    env_file: .env.prod
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      /usr/bin/mc alias set minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD &&
      /usr/bin/mc mb minio/lost-and-found --ignore-existing &&
      /usr/bin/mc anonymous set public minio/lost-and-found
      "
    networks:
      - app-network

volumes:
  pgdbdata:
  minio_data:
  static_volume:


networks:
  app-network:
    driver: bridge